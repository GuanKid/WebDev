{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Dev\\\\web dev project\\\\WebDev\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PatientCheckIn from './components/PatientCheckIn';\nimport Triage from './components/Triage';\nimport Dashboard from './components/Dashboard';\nimport { getAllPatients, createPatient, updatePatient, dischargePatient } from './api/patientApi';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const patientsData = await getAllPatients();\n      setPatients(patientsData);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const handleCheckIn = async patientData => {\n    try {\n      const newPatient = await createPatient(patientData);\n      setPatients([...patients, newPatient]);\n    } catch (error) {\n      console.error('Error checking in patient:', error);\n    }\n  };\n  const handleTriage = async (id, triageLevel) => {\n    try {\n      const updatedPatient = await updatePatient(id, {\n        triageLevel\n      });\n      setPatients(patients.map(p => p._id === id ? updatedPatient : p));\n    } catch (error) {\n      console.error('Error triaging patient:', error);\n    }\n  };\n  const handleDischarge = async id => {\n    try {\n      const dischargedPatient = await dischargePatient(id);\n      setPatients(patients.map(p => p._id === id ? dischargedPatient : p));\n    } catch (error) {\n      console.error('Error discharging patient:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(PatientCheckIn, {\n        onCheckIn: handleCheckIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Triage, {\n        patients: patients,\n        onTriage: handleTriage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        patients: patients,\n        onDischarge: handleDischarge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PatientCheckIn","Triage","Dashboard","getAllPatients","createPatient","updatePatient","dischargePatient","jsxDEV","_jsxDEV","App","_s","patients","setPatients","fetchPatients","patientsData","error","console","handleCheckIn","patientData","newPatient","handleTriage","id","triageLevel","updatedPatient","map","p","_id","handleDischarge","dischargedPatient","className","children","onCheckIn","fileName","_jsxFileName","lineNumber","columnNumber","onTriage","onDischarge","_c","$RefreshReg$"],"sources":["C:/Web Dev/web dev project/WebDev/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PatientCheckIn from './components/PatientCheckIn';\r\nimport Triage from './components/Triage';\r\nimport Dashboard from './components/Dashboard';\r\nimport { getAllPatients, createPatient, updatePatient, dischargePatient } from './api/patientApi';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const patientsData = await getAllPatients();\r\n      setPatients(patientsData);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const handleCheckIn = async (patientData) => {\r\n    try {\r\n      const newPatient = await createPatient(patientData);\r\n      setPatients([...patients, newPatient]);\r\n    } catch (error) {\r\n      console.error('Error checking in patient:', error);\r\n    }\r\n  };\r\n\r\n  const handleTriage = async (id, triageLevel) => {\r\n    try {\r\n      const updatedPatient = await updatePatient(id, { triageLevel });\r\n      setPatients(patients.map(p => p._id === id ? updatedPatient : p));\r\n    } catch (error) {\r\n      console.error('Error triaging patient:', error);\r\n    }\r\n  };\r\n\r\n  const handleDischarge = async (id) => {\r\n    try {\r\n      const dischargedPatient = await dischargePatient(id);\r\n      setPatients(patients.map(p => p._id === id ? dischargedPatient : p));\r\n    } catch (error) {\r\n      console.error('Error discharging patient:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"app-container\">\r\n        <PatientCheckIn onCheckIn={handleCheckIn} />\r\n        <Triage patients={patients} onTriage={handleTriage} />\r\n        <Dashboard patients={patients} onDischarge={handleDischarge} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}